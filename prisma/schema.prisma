// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MEMBER
}

model Pet {
  id         String   @id @default(uuid())
  photoUrl   String   @map("photo_url")
  name       String
  breed      String
  color      String
  age        Int
  size       String
  details    String
  created_at DateTime @default(now())
  updated_at DateTime?

  ong   Ong    @relation(fields: [ongId], references: [id])
  ongId String @map("ong_id")

  @@map("pets")
}

model Ong {
  id            String   @id @default(uuid())
  photoUrl      String?   @map("photo_url")
  name          String
  socialReason  String   @map("social_reason")
  cnpj          String   @unique
  whatsapp      String
  email         String   @unique
  password_hash String
  address       String
  zipcode       String
  created_at    DateTime @default(now())
  updated_at    DateTime?

  Pets Pet[]

  role   Role   @default(MEMBER)
  city   City   @relation(fields: [cityId], references: [id], onDelete: Cascade)
  cityId String @map("city_id")

  @@map("ongs")
}

model City {
  id      String @id @default(uuid())
  name    String
  Ongs    Ong[]
  state   State  @relation(fields: [stateId], references: [id], onDelete: Cascade)
  stateId String @map("state_id")

  @@map("cities")
}

model State {
  id   String @id @default(uuid())
  name String
  city City[]

  @@map("states")
}
